{"version":3,"sources":["Components/AddVote.js","Components/Chart.js","Components/AdditionalCharts.js","Components/Modal.js","Components/SmsConfirmation.js","App.js","serviceWorker.js","index.js"],"names":["recaptchaInstance","Chart","_ref","data","dataMount","labels","map","candidate","name","datasets","label","voteCount","backgroundColor","react_default","a","createElement","className","es","height","options","maintainAspectRatio","legend","display","position","AddVote","state","candidateId","number","gender","age","value","handleChange","e","_this","setState","Object","defineProperty","target","handleRadioChange","id","handleSubmit","preventDefault","reset","props","addVote","recaptchaLoaded","console","log","verifyCallback","response","_this2","this","radioButton","key","onClick","type","onSubmit","onChange","placeholder","react_recaptcha_default","sitekey","ref","onloadCallback","Component","Modal","modal","changeModalStatus","style","zIndex","opacity","top","transform","status","message","SmsConfirmation","pin","confirmSmsKey","link","color","htmlFor","urlData","urlPost","App","input","candidateSelection","smsVerification","formatNumber","vote","formattedNumber","fetch","method","headers","Content-Type","body","JSON","stringify","then","json","error","apiData","Components_Modal","Components_Chart","Components_AddVote","Components_SmsConfirmation","AdditionalCharts","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.db97cbd2.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\nimport Recaptcha from 'react-recaptcha';\r\n\r\nlet recaptchaInstance;\r\n\r\nclass AddVote extends Component {\r\n    state = {\r\n        candidateId: '',\r\n        number: '',\r\n        gender: '',\r\n        age: '',\r\n        value: ''      \r\n    }\r\n\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        });\r\n    }\r\n\r\n    handleRadioChange = (e) => {\r\n        this.setState({\r\n            [e.target.name]: e.target.id\r\n        });        \r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        recaptchaInstance.reset();\r\n        this.props.addVote(this.state);\r\n    }\r\n\r\n    recaptchaLoaded = () => {\r\n        console.log('Google ReCaptcha Loaded!');\r\n    }\r\n\r\n    verifyCallback = (response) => {\r\n        if(response) this.setState({value: response})\r\n    }\r\n\r\n    render(){\r\n        const radioButton = this.props.data.map(candidate => {\r\n            return (\r\n                <p key={candidate.id}>\r\n                    <label>\r\n                        <input onClick={this.handleRadioChange} id={candidate.id} className=\"with-gap\" name=\"candidateId\" type=\"radio\"/>\r\n                        <span>{candidate.name}</span>\r\n                    </label>\r\n                </p>                \r\n            );\r\n        });\r\n\r\n        return this.props.display ? (\r\n            <div className=\"voting-section light\">\r\n                <div className=\"container\">\r\n                    <div className=\"add-vote\">\r\n                        <h5 className=\"center-align header-main\">დააფიქსირე შენი ხმა</h5>\r\n                        <form onSubmit={this.handleSubmit}>\r\n                            <div className=\"row\">\r\n                                <div className=\"input-field col s6\">\r\n                                    <input onChange={this.handleChange} placeholder=\"+995599123456\" name=\"number\" type=\"text\" className=\"validate\"/>\r\n                                    <label className=\"active\">ტელეფონის ნომერი<span className=\"important\">*</span></label>\r\n                                </div>\r\n                                <div className=\"input-field col s6\">\r\n                                    <input onChange={this.handleChange} placeholder=\"25\" name=\"age\" type=\"text\" className=\"validate\"/>\r\n                                    <label className=\"active\">ასაკი</label>\r\n                                </div>\r\n                                <div className=\"col s12 m6\">\r\n                                    <p>სქესი</p>\r\n                                    <p>\r\n                                        <label>\r\n                                            <input onClick={this.handleRadioChange} id=\"male\" className=\"with-gap\" name=\"gender\" type=\"radio\"/>\r\n                                            <span>კაცი</span>\r\n                                        </label>\r\n                                    </p>\r\n                                    <p>\r\n                                        <label>\r\n                                            <input onClick={this.handleRadioChange} id=\"female\" className=\"with-gap\" name=\"gender\" type=\"radio\"/>\r\n                                            <span>ქალი</span>\r\n                                        </label>\r\n                                    </p>                            \r\n                                </div>                        \r\n                                <div className=\"col s12 m6\">\r\n                                    <p>კანდიდატი<span className=\"important\">*</span></p>\r\n                                    {radioButton}\r\n                                </div>\r\n                                <div className=\"col s12 m6 offset-m6\">\r\n                                    <Recaptcha\r\n                                    sitekey=\"6Le4JnYUAAAAAJsF-r7jLHNI9zaMh4Wnuvb565Os\"\r\n                                    ref={e => recaptchaInstance = e}\r\n                                    onloadCallback={this.recaptchaLoaded}\r\n                                    verifyCallback={this.verifyCallback}\r\n                                    />\r\n                                </div>                                     \r\n                            </div>\r\n                            <button className=\"btn main-btn\">ხმის დაფიქსირება</button>                   \r\n                        </form>          \r\n                    </div>\r\n                </div>\r\n            </div>\r\n        ) : false;\r\n    }\r\n}\r\n\r\nexport default AddVote;","import React from 'react';\r\nimport {HorizontalBar} from 'react-chartjs-2';\r\n\r\nconst Chart = ({data}) => {\r\n    const candidateList = data.map(candidate => {\r\n        return candidate.name;\r\n    });\r\n\r\n    const voteNumberList = data.map(candidate => {\r\n        return candidate.voteCount;\r\n    });\r\n\r\n    const dataMount = {\r\n        labels: candidateList,\r\n        datasets: [{\r\n            label: 'ხმების რაოდენობა',\r\n            data: voteNumberList,\r\n            backgroundColor: [\r\n                'rgba(255, 99, 132, 0.5)',\r\n                'rgba(54, 162, 235, 0.5)',\r\n                'rgba(255, 206, 86, 0.5)',\r\n                'rgba(75, 192, 192, 0.5)',\r\n                'rgba(153, 102, 255, 0.5)',\r\n                'rgba(255, 159, 64, 0.5)',\r\n                'rgba(255, 99, 132, 0.5)',\r\n                'rgba(54, 162, 235, 0.5)',\r\n                'rgba(255, 206, 86, 0.5)',\r\n                'rgba(75, 192, 192, 0.5)',\r\n                'rgba(115,99,169, 0.5)',\r\n                'rgba(16,22,104, 0.5)',\r\n                'rgba(185,198,1, 0.5)',\r\n                'rgba(201,76,94, 0.5)',\r\n                'rgba(146,1,255, 0.5)',\r\n                'rgba(63,229,86, 0.5)',\r\n                'rgba(189,20,94, 0.5)',\r\n                'rgba(254,161,206, 0.5)',\r\n                'rgba(149,208,36, 0.5)',\r\n                'rgba(232,110,10, 0.5)',\r\n                'rgba(25,52,132, 0.5)',\r\n                'rgba(102,82,133, 0.5)',\r\n                'rgba(112,190,78, 0.5)',\r\n                'rgba(139,60,230, 0.5)',\r\n                'rgba(65,2,241, 0.5)',\r\n            ]            \r\n        }]\r\n    };\r\n\r\n    return(\r\n        <div className=\"voting-section\">\r\n            <div className=\"container\">\r\n                <div className=\"main-chart\">\r\n                    <div>\r\n                        <h5 className=\"center-align header-main\">რეზულტატები</h5>\r\n                        <HorizontalBar\r\n                            data={dataMount}\r\n                            height={450}\r\n                            options={{\r\n                                maintainAspectRatio: false,\r\n                                legend: {\r\n                                    display: true,\r\n                                    position: 'bottom'\r\n                                }\r\n                            }}\r\n                        />\r\n                    </div>         \r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Chart;","import React from 'react';\r\nimport {Doughnut} from 'react-chartjs-2';\r\n\r\nconst Chart = ({data}) => {\r\n    const candidateList = data.map(candidate => {\r\n        return candidate.name;\r\n    });\r\n\r\n    const voteNumberList = data.map(candidate => {\r\n        return candidate.voteCount;\r\n    });\r\n\r\n    const dataMount = {\r\n        labels: candidateList,\r\n        datasets: [{\r\n            label: 'ხმების რაოდენობა',\r\n            data: voteNumberList,\r\n            backgroundColor: [\r\n                'rgba(255, 99, 132, 0.5)',\r\n                'rgba(54, 162, 235, 0.5)',\r\n                'rgba(255, 206, 86, 0.5)',\r\n                'rgba(75, 192, 192, 0.5)',\r\n                'rgba(153, 102, 255, 0.5)',\r\n                'rgba(255, 159, 64, 0.5)',\r\n                'rgba(255, 99, 132, 0.5)',\r\n                'rgba(54, 162, 235, 0.5)',\r\n                'rgba(255, 206, 86, 0.5)',\r\n                'rgba(75, 192, 192, 0.5)',\r\n                'rgba(115,99,169, 0.5)',\r\n                'rgba(16,22,104, 0.5)',\r\n                'rgba(185,198,1, 0.5)',\r\n                'rgba(201,76,94, 0.5)',\r\n                'rgba(146,1,255, 0.5)',\r\n                'rgba(63,229,86, 0.5)',\r\n                'rgba(189,20,94, 0.5)',\r\n                'rgba(254,161,206, 0.5)',\r\n                'rgba(149,208,36, 0.5)',\r\n                'rgba(232,110,10, 0.5)',\r\n                'rgba(25,52,132, 0.5)',\r\n                'rgba(102,82,133, 0.5)',\r\n                'rgba(112,190,78, 0.5)',\r\n                'rgba(139,60,230, 0.5)',\r\n                'rgba(65,2,241, 0.5)',\r\n            ]            \r\n        }]\r\n    };\r\n\r\n    return(\r\n        <div className=\"voting-section\">\r\n            <div className=\"container\">\r\n                <div className=\"main-chart row\">\r\n                    <h5 className=\"center-align header-main\">დამატებითი სტატისტიკა</h5>\r\n                    <div className=\"col s12 m12\">\r\n                        <Doughnut \r\n                            data={dataMount}\r\n                            options={{\r\n                                maintainAspectRatio: true,\r\n                                legend: {\r\n                                    display: true,\r\n                                    position: 'bottom'\r\n                                }\r\n                            }}\r\n                        />\r\n                    </div>          \r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Chart;","import React from 'react';\r\n\r\nconst Modal = ({modal, changeModalStatus}) => {\r\n    return modal.display ? (\r\n        <div className=\"modal open\" style={{zIndex: '1003', display: 'block', opacity: '1', top: '10%', transform: 'scaleX(1), scaleY(1)'}}>\r\n            <div className=\"modal-content\">\r\n                <h5>{modal.status ? 'ხმის მიცემა დასრულებულია' : 'დაფიქსირდა შეცდომა'}</h5>\r\n                <p>{modal.message}</p>\r\n            </div>\r\n            <div className=\"modal-footer\">\r\n                <button onClick={changeModalStatus} className=\"modal-close waves-effect waves-green btn-flat\">თანხმობა</button>\r\n            </div>\r\n        </div>\r\n    ) : false;\r\n}\r\n\r\nexport default Modal; ","import React, {Component} from 'react';\r\n\r\nclass SmsConfirmation extends Component {\r\n    state = {\r\n        pin: ''\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            pin: e.target.value\r\n        });\r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.props.confirmSmsKey(this.state.pin, this.props.link);\r\n    }\r\n    \r\n    render(){\r\n        return this.props.display ? (\r\n            <div className=\"voting-section light\">\r\n                <div className=\"container\">\r\n                    <div className=\"add-vote\">\r\n                        <h5 className=\"center-align header-main\">დაადასტურე შენი ხმის უნიკალურობა</h5>\r\n                        <form onSubmit={this.handleSubmit}>\r\n                            <div className=\"row\">\r\n                                <div className=\"col s12\">\r\n                                    <p style={{color: 'red'}}>ჩვენ გამოგიგზავნეთ ვალიდაციის კოდი თქვენს მიერ მითითებულ ნომერზე.</p>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"row\">\r\n                                <div className=\"input-field col s12 m6\">                            \r\n                                    <input onChange={this.handleChange} placeholder=\"12345\" name=\"pin\" id=\"pin\" type=\"text\" className=\"validate\"/>                            \r\n                                    <label htmlFor=\"pin\" className=\"active\">ვალიდაციის კოდი<span className=\"important\">*</span></label>\r\n                                </div>\r\n                            </div>\r\n                            <button className=\"btn main-btn\">დადასტურება</button>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        ) : false;\r\n    }\r\n}\r\n\r\nexport default SmsConfirmation; ","import React, { Component } from 'react';\nimport Chart from './Components/Chart';\nimport AdditionalCharts from './Components/AdditionalCharts'\nimport AddVote from './Components/AddVote';\nimport Modal from './Components/Modal';\nimport SmsConfirmation from './Components/SmsConfirmation';\n\nconst urlData = 'https://pollitic.herokuapp.com/api'; //api url for fetching candidates\nconst urlPost = 'https://pollitic.herokuapp.com/api/vote';\n\nclass App extends Component {\n\tstate = {\n\t\tmodal: {\n\t\t\tdisplay: false,\n\t\t\tstatus: false,\n\t\t\tmessage: 'ეს ნომერი ერთხელ უკვე გამოყენებული იქნა!'\n\t\t},\n\t\tinput: {\n\t\t\tcandidateSelection: true,\n\t\t\tsmsVerification: false,\n\t\t\tlink: ''\n\t\t}\n\t}\n\n\tformatNumber = (number) => {\n\t\treturn number[0] !== '+' ? ('+' + number) : number;\n    }\n\n\taddVote = (vote) => {\n\t\tconsole.log('%cVOTE OBJECT REACT', \"color: blue; font-size:15px;\");\n\t\tconsole.log(vote);\n\t\tconst formattedNumber = this.formatNumber(vote.number);\n\t\tfetch(urlPost, {\n\t\t\t\tmethod: 'POST',\n\t\t\t\theaders: {\n\t\t\t\t\t'Content-Type': 'application/json'\n\t\t\t\t},\n\t\t\t\tbody: JSON.stringify({\n\t\t\t\t\tnumber: formattedNumber,\n\t\t\t\t\tcandidateId: vote.candidateId,\n\t\t\t\t\tgender: vote.gender,\n\t\t\t\t\tage: vote.age,\n\t\t\t\t\tvalue: vote.value\n\t\t\t\t})\n\t\t\t})\n\t\t\t.then(data => data.json())\n\t\t\t.then(data => {\n\t\t\t\tconsole.log('%cFETCH DATA JSON WITH VOTE OBJ', \"color: red; font-size:15px;\");\n\t\t\t\tconsole.log(data);\n\t\t\t\tif(data.status === 'success') {\n\t\t\t\t\tthis.setState({\n\t\t\t\t\t\tinput: {\n\t\t\t\t\t\t\tcandidateSelection: false,\n\t\t\t\t\t\t\tsmsVerification: true,\n\t\t\t\t\t\t\tlink: data.data.link\n\t\t\t\t\t\t}\n\t\t\t\t\t});\t\t\t\t\t\n\t\t\t\t} else {\n\t\t\t\t\tthis.setState({\n\t\t\t\t\t\tmodal: {\n\t\t\t\t\t\t\tdisplay: true,\n\t\t\t\t\t\t\tstatus: false,\n\t\t\t\t\t\t\tmessage: data.error\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\t\t\n\t}\n\n\tconfirmSmsKey = (pin, link) => {\n\t\tconsole.log('%cPIN, LINK OBJECT REACT', \"color: blue; font-size:15px;\");\n\t\tconsole.log({pin, link});\n\t\tfetch(link, {\n\t\t\tmethod: 'POST',\n\t\t\theaders: {\n\t\t\t\t'Content-Type': 'application/json'\n\t\t\t},\n\t\t\tbody: JSON.stringify({\n\t\t\t\tpin: pin\n\t\t\t})\n\t\t})\n\t\t\t.then(data => data.json())\n\t\t\t.then(data => {\n\t\t\t\tconsole.log('%cFETCH DATA JSON WITH {pin, link} OBJ', \"color: red; font-size:15px;\");\n\t\t\t\tconsole.log(data);\n\t\t\t\tif(data.status === 'success') {\n\t\t\t\t\tfetch(urlData)\n\t\t\t\t\t\t.then(apiData => apiData.json())\n\t\t\t\t\t\t.then(apiData => {\n\t\t\t\t\t\t\tthis.setState({\n\t\t\t\t\t\t\t\tmodal: {\n\t\t\t\t\t\t\t\t\tdisplay: true,\n\t\t\t\t\t\t\t\t\tstatus: true,\n\t\t\t\t\t\t\t\t\tmessage: data.data.message\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tinput: {\n\t\t\t\t\t\t\t\t\tcandidateSelection: false,\n\t\t\t\t\t\t\t\t\tsmsVerification: false,\n\t\t\t\t\t\t\t\t\tlink: ''\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tapiData: apiData\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t});\t\t\t\t\t\n\t\t\t\t} else {\n\t\t\t\t\tthis.setState({\n\t\t\t\t\t\tmodal: {\n\t\t\t\t\t\t\tdisplay: true,\n\t\t\t\t\t\t\tstatus: false,\n\t\t\t\t\t\t\tmessage: data.error\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\t}\n\n\tchangeModalStatus = () => {\n\t\tthis.setState({\n\t\t\tmodal: {\n\t\t\t\tdisplay: false,\n\t\t\t\tstatus: false,\n\t\t\t\tmessage: ''\n\t\t\t}\n\t\t});\n\t}\n\n\tcomponentDidMount() {\n\t\tfetch(urlData)\n\t\t\t.then(apiData => apiData.json())\n\t\t\t.then(apiData => {\n\t\t\t\tthis.setState({apiData: apiData});\n\t\t\t});\n\t}\n\n\trender() {\n\t\tif (!this.state.apiData) return <div className=\"loader\">საიტი იტვირთება...</div>\n\t\treturn (\n\t\t\t<div className=\"App\">\n\t\t\t\t<Modal modal={this.state.modal} changeModalStatus={this.changeModalStatus}/>\n\t\t\t\t<Chart data={this.state.apiData.data}/>\n\t\t\t\t<AddVote display={this.state.input.candidateSelection} addVote={this.addVote} data={this.state.apiData.data} confirmSmsKey={this.confirmSmsKey}/>\n\t\t\t\t<SmsConfirmation display={this.state.input.smsVerification} confirmSmsKey={this.confirmSmsKey} link={this.state.input.link}/>\n\t\t\t\t<AdditionalCharts data={this.state.apiData.data}/>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}